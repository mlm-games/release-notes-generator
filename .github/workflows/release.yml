name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate version format
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag v${{ inputs.version }} already exists"
            exit 1
          fi

      - name: Generate Release Notes
        id: release-notes
        uses: ./
        with:
          version: ${{ inputs.version }}
          changelog-path: 'CHANGELOG.md'
          format: '- {{subject}} by @{{author}}'
          exclude-patterns: 'chore:,ci:,docs:,Update release notes,Merge pull request'
          auto-commit: 'false'
          debug: 'false'

      - name: Update version in README usage
        run: |
          # Update version pin in README examples (keep separate major-tag examples)
          sed -i -E "s#mlm-games/release-notes-generator@v[0-9]+\.[0-9]+\.[0-9]+#mlm-games/release-notes-generator@v${{ inputs.version }}#g" README.md

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "chore: release v${{ inputs.version }}" || echo "No changes to commit"

      - name: Create tag and push
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin main --follow-tags

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          body: ${{ steps.release-notes.outputs.release-notes }}
          draft: false
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: false

      - name: Update major version tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          MAJOR_VERSION="$(echo "${{ inputs.version }}" | cut -d. -f1)"
          git tag -fa "v${MAJOR_VERSION}" -m "Update major version tag (v${{ inputs.version }})"
          git push origin "v${MAJOR_VERSION}" --force